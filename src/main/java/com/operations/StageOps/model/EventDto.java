package com.operations.StageOps.model;

/**
 * A Data Transfer Object (DTO) for representing event details.
 * This class is used to transfer event data in a simplified format.
 */
public class EventDto {
    private int eventId;
    private String eventName;
    private String eventDate;  // ISO 8601 format (2025-03-10)
    private int roomId;
    private int ticketsAvailable;
    private int ticketsSold;
    private String eventType;
    private double totalRevenue;
    private String startTime; // ISO 8601 format (2025-03-10T10:00:00Z)
    private String endTime;   // ISO 8601 format (2025-03-10T14:00:00Z)
    private int layoutId;

    private double ticketPrice;
    private double maxDiscount;

    private int clientId; // Assuming this is needed for the event

    /**
     * Gets the event ID.
     *
     * @return The unique identifier of the event.
     */
    public int getEventId() {
        return eventId;
    }

    /**
     * Sets the event ID.
     *
     * @param eventId The unique identifier of the event.
     */
    public void setEventId(int eventId) {
        this.eventId = eventId;
    }

    /**
     * Gets the event name.
     *
     * @return The name of the event.
     */
    public String getEventName() {
        return eventName;
    }

    /**
     * Sets the event name.
     *
     * @param eventName The name of the event.
     */
    public void setEventName(String eventName) {
        this.eventName = eventName;
    }

    /**
     * Gets the event date.
     *
     * @return The date of the event.
     */
    public String getEventDate() {
        return eventDate;
    }

    /**
     * Sets the event date.
     *
     * @param eventDate The date of the event.
     */
    public void setEventDate(String eventDate) {
        this.eventDate = eventDate;
    }


    /**
     * Gets the room ID.
     *
     * @return The unique identifier of the room.
     */
    public int getRoomId() {
        return roomId;
    }

    /**
     * Sets the room ID.
     *
     * @param roomId The unique identifier of the room.
     */
    public void setRoomId(int roomId) {
        this.roomId = roomId;
    }

    /**
     * Gets the number of tickets available.
     *
     * @return The number of tickets available for the event.
     */
    public int getTicketsAvailable() {
        return ticketsAvailable;
    }

    /**
     * Sets the number of tickets available.
     *
     * @param ticketsAvailable The number of tickets available for the event.
     */
    public void setTicketsAvailable(int ticketsAvailable) {
        this.ticketsAvailable = ticketsAvailable;
    }

    /**
     * Gets the number of tickets sold.
     *
     * @return The number of tickets sold for the event.
     */
    public int getTicketsSold() {
        return ticketsSold;
    }

    /**
     * Sets the number of tickets sold.
     *
     * @param ticketsSold The number of tickets sold for the event.
     */
    public void setTicketsSold(int ticketsSold) {
        this.ticketsSold = ticketsSold;
    }

    /**
     * Gets the event type.
     *
     * @return The type of the event.
     */
    public String getEventType() {
        return eventType;
    }

    /**
     * Sets the event type.
     *
     * @param eventType The type of the event.
     */
    public void setEventType(String eventType) {
        this.eventType = eventType;
    }

    /**
     * Gets the total revenue.
     *
     * @return The total revenue generated by the event.
     */
    public double getTotalRevenue() {
        return totalRevenue;
    }

    /**
     * Sets the total revenue.
     *
     * @param totalRevenue The total revenue generated by the event.
     */
    public void setTotalRevenue(double totalRevenue) {
        this.totalRevenue = totalRevenue;
    }

    /**
     * Gets the start time.
     *
     * @return The start time of the event.
     */
    public String getStartTime() {
        return startTime;
    }

    /**
     * Sets the start time.
     *
     * @param startTime The start time of the event.
     */
    public void setStartTime(String startTime) {
        this.startTime = startTime;
    }

    /**
     * Gets the end time.
     *
     * @return The end time of the event.
     */
    public String getEndTime() {
        return endTime;
    }

    /**
     * Sets the end time.
     *
     * @param endTime The end time of the event.
     */
    public void setEndTime(String endTime) {
        this.endTime = endTime;
    }

    /**
     * Gets the layout ID.
     *
     * @return The unique identifier of the layout.
     */
    public int getLayoutId() {
        return layoutId;
    }

    /**
     * Sets the layout ID.
     *
     * @param layoutId The unique identifier of the layout.
     */
    public void setLayoutId(int layoutId) {
        this.layoutId = layoutId;
    }

    /**
     * Gets the price of a single ticket for the event.
     *
     * @return The price of a single ticket, represented as a {@code double}.
     */
    public double getTicketPrice() {
        return ticketPrice;
    }

    /**
     * Sets the price of a single ticket for the event.
     *
     * @param ticketPrice The price of a single ticket, represented as a {@code double}.
     *                    This value should be a positive number.
     */
    public void setTicketPrice(double ticketPrice) {
        this.ticketPrice = ticketPrice;
    }

    /**
     * Gets the maximum discount allowed on the ticket price for the event.
     *
     * @return The maximum discount as a percentage, represented as a {@code double}.
     *         For example, a discount of 20% would be returned as {@code 20.0}.
     */
    public double getMaxDiscount() {
        return maxDiscount;
    }

    /**
     * Sets the maximum discount allowed on the ticket price for the event.
     *
     * @param maxDiscount The maximum discount as a percentage, represented as a {@code double}.
     *                    This value should be between 0 and 100 (inclusive), where 100 represents
     *                    a full discount.
     */
    public void setMaxDiscount(double maxDiscount) {
        this.maxDiscount = maxDiscount;
    }

    public int getClientId() {
        return clientId;
    }

    public void setClientId(int clientId) {
        this.clientId = clientId;
    }
}
